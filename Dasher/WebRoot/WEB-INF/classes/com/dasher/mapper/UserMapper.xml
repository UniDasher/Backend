<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dasher.mapper.UserMapper">
   <resultMap type="User" id="userMap">
     <result property="id" column="id"/>
     <result property="uid" column="uid" />
     <result property="firstName" column="firstName" />
     <result property="lastName" column="lastName" />
     <result property="account" column="account" />
	 <result property="password" column="password" />
	 <result property="salt" column="salt" />
	 <result property="equmentNumber" column="equmentNumber" />
	 <result property="logo" column="logo" />
	 <result property="balance" column="balance" />
	 <result property="mobilePhone" column="mobilePhone" />
	 <result property="email" column="email" />
	 <result property="address" column="address" />
	 <result property="longitude" column="longitude" />
	 <result property="latitude" column="latitude" />
	 <result property="goodEvaluate" column="goodEvaluate" />
	 <result property="badEvaluate" column="badEvaluate" />
	 <result property="createDate" column="createDate" />
	 <result property="status" column="status" />
	 <result property="bankType" column="bankType" />
	 <result property="bankAccount" column="bankAccount" />
   </resultMap>
   
   <insert id="addUser" useGeneratedKeys="true" keyProperty="id" parameterType="User">
     insert into user_info(uid,firstName,lastName,account,password,salt,equmentNumber,mobilePhone,logo,email,address,longitude,latitude,createDate,status,bankAccount,bankType)
     values(#{uid},#{firstName},#{lastName},#{account},#{password},#{salt},#{equmentNumber},#{mobilePhone},#{logo},#{email},#{address},#{longitude},#{latitude},#{createDate},1,#{bankAccount},#{bankType})
   </insert>
   
   <select id="getByUId" parameterType="String" resultType="User">
     select * from user_info where uid=#{uid}
   </select>
   
   <select id="getUserByTel" parameterType="String" resultType="User">
     select * from user_info where mobilePhone=#{mobilePhone}
   </select>
   
   <update id="update" parameterType="User">
     update user_info 
     set firstName=#{firstName},lastName=#{lastName},email=#{email},address=#{address},longitude=#{longitude},latitude=#{latitude},bankAccount=#{bankAccount},bankType=#{bankType}
     where uid=#{uid}
   </update>
   
   <update id="updatePwd" parameterType="User">
     update user_info 
     set password=#{password}
     where uid=#{uid}
   </update>
   
   <update id="userApply" parameterType="User">
     update user_info 
     set status=#{status}
     where uid=#{uid}
   </update>
   
   <select id="getUserByStatus2" resultType="Integer">
     select count(*) from user_info
     where 1=1 
     <if test="type==1">
     	and (status=2 or status=3)
     </if>
     <if test="searchStr!=''">
	    and (firstName like CONCAT(CONCAT('%', #{searchStr}),'%') or lastName like CONCAT(CONCAT('%', #{searchStr}),'%')) 
	 </if>
	 
   </select>
   
   <select id="searchUser" resultType="User">
     select uid,account,firstName,lastName,logo,balance,mobilePhone,email,address,longitude,latitude,goodEvaluate,badEvaluate,status from user_info
     where 1=1 
     <if test="type==1">
     	and (status=2 or status=3)
     </if>
     <if test="searchStr!=''">
	    and (firstName like CONCAT(CONCAT('%', #{searchStr}),'%') or lastName like CONCAT(CONCAT('%', #{searchStr}),'%')) 
	 </if>
     limit #{startRow},#{pageSize}
   </select>
  
   <update id="updateLogo" parameterType="User">
     update user_info 
     set logo=#{logo}
     where uid=#{uid}
   </update>
   
   <update id="updateUserName" parameterType="User">
     update user_info 
     set firstName=#{firstName}
     where uid=#{uid}
   </update>
   
   <update id="updatePhone" parameterType="User">
     update user_info 
     set mobilePhone=#{mobilePhone}
     where uid=#{uid}
   </update>
   
   <update id="updateEmail" parameterType="User">
     update user_info 
     set email=#{email}
     where uid=#{uid}
   </update>
   
   <select id="balanceList" resultType="User">
     select * 
     from user_info
     where balance>0 
     <if test="searchStr!=''">
	    and (firstName like CONCAT(CONCAT('%', #{searchStr}),'%') or lastName like CONCAT(CONCAT('%', #{searchStr}),'%')) 
	 </if>
     limit #{startRow},#{pageSize}
   </select>
   <select id="balanceListCount" resultType="Integer">
     select count(*) 
     from user_info
     where balance>0 
     <if test="searchStr!=''">
	    and (firstName like CONCAT(CONCAT('%', #{searchStr}),'%') or lastName like CONCAT(CONCAT('%', #{searchStr}),'%')) 
	 </if>
   </select>
   
   <update id="updateBalance" parameterType="String">
     update user_info 
     set balance=#{curUserBalance}
     where uid=#{uid}
   </update>
   <select id="settleList" resultType="User">
     select * 
     from user_info
     where balance>0 
     <if test="searchStr!=''">
	    and (firstName like CONCAT(CONCAT('%', #{searchStr}),'%') or lastName like CONCAT(CONCAT('%', #{searchStr}),'%')) 
	 </if>
   </select>
   
</mapper>
